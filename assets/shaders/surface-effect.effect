CCProgram surface {
    // Properties
    properties {
        color: { value: [1, 0, 0, 1], editor: { type: color } }
    }

    // Pass
    pass {
        // Vertex Shader
        CGPROGRAM
        #pragma vertex vert
        #pragma fragment frag

        #include "unitycg.cginc"

        struct appdata_t {
            float4 vertex : POSITION;
            float2 uv : TEXCOORD0;
        };

        struct v2f {
            float2 uv : TEXCOORD0;
            UNITY_FOG_COORDS(1)
            float4 vertex : SV_POSITION;
        };

        v2f vert (appdata_t v) {
            v2f o;
            o.vertex = UnityObjectToClipPos(v.vertex);
            o.uv = v.uv;
            UNITY_TRANSFER_FOG(o,o.vertex);
            return o;
        }

        fixed4 frag (v2f i) : SV_Target {
            fixed4 c = fixed4(color.rgb, 1.0);
            return c;
        }
        ENDCG
    }
}
